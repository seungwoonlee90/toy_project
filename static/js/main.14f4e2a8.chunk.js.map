{"version":3,"sources":["App.js","index.js"],"names":["App","useState","progress","prgoressEdit","down","downEdit","crs","crsEdit","data","dataEdit","handleForce","fileInfo","a","newArray","i","address","addr","process","url","axios","get","then","res","xcoord","response","result","point","x","ycoord","y","push","length","className","onChange","e","target","value","cssClass","onFileLoaded","parserOptions","header","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","inputStyle","width","headers","label","key","separator","filename","Date","getFullYear","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAgHeA,MA1Gf,WAAgB,IAAD,EACkBC,oBAAS,GAD3B,mBACRC,EADQ,KACEC,EADF,OAEUF,oBAAS,GAFnB,mBAERG,EAFQ,KAEFC,EAFE,OAGQJ,mBAAS,MAHjB,mBAGRK,EAHQ,KAGHC,EAHG,OAIUN,mBAAS,IAJnB,mBAIRO,EAJQ,KAIFC,EAJE,KAMPC,EAAW,uCAAG,WAAOF,EAAMG,GAAb,mBAAAC,EAAA,sDACdD,GACFR,GAAa,GAEXU,EAAW,GAJG,IAAAD,EAAA,iBAKTE,GALS,iBAAAF,EAAA,6DAMZG,EAAUP,EAAKM,GAAGE,KACZC,uCACNC,EARY,iGAQoFZ,EARpF,oBAQmGS,EARnG,+DAONE,wCAPM,SAUVE,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GACzB,IAAIC,EAASD,EAAId,KAAKgB,SAASC,OAAOC,MAAMC,EACxCC,EAASN,EAAId,KAAKgB,SAASC,OAAOC,MAAMG,EAC5ChB,EAASiB,KAAK,CAAEf,UAASQ,SAAQK,cAbnB,0CAKTd,EAAI,EALK,YAKFA,EAAIN,EAAKuB,QALP,yCAKTjB,GALS,eAKeA,IALf,sBAgBlBL,EAASI,GACTV,GAAa,GACbE,GAAS,GAlBS,4CAAH,wDAsCjB,OACE,qBAAK2B,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qHACA,sBAAKA,UAAU,OAAf,+HACyC,uBADzC,uCAGE,yBAAQA,UAAU,UAAUC,SAZjB,SAACC,GACpB3B,EAAQ2B,EAAEC,OAAOC,QAWT,UACE,wBAAQA,MAAM,OAAd,0DACA,wBAAQA,MAAM,OAAd,iEACA,wBAAQA,MAAM,OAAd,+CANJ,0EASE,uBACA,oJAGJ,cAAC,IAAD,CACEJ,UAAU,SACVK,SAAS,kBACTC,aAAc5B,EACd6B,cAjCiB,CACvBC,QAAQ,EACRC,eAAe,EACfC,gBAAgB,EAChBC,gBAAiB,SAACH,GAAD,OAAYA,EAAOI,cAAcC,QAAQ,OAAQ,OA8B5DC,WAAY,CAAEC,MAAO,WAEtB7C,EAAW,sBAAM8B,UAAU,0BAAhB,kBAAwD,GACnE5B,EACC,cAAC,UAAD,CACEI,KAAMA,EACNwC,QA9CM,CACd,CAAEC,MAAO,OAAQC,IAAK,WACtB,CAAED,MAAO,IAAKC,IAAK,UACnB,CAAED,MAAO,IAAKC,IAAK,WA4CXC,UAAW,IACXC,SAAU,gBACVpB,UAAU,WALZ,SAOE,sBAAKA,UAAU,WAAf,UACE,yCACA,sBAAMA,UAAU,iBAAhB,gCAIJ,GAEF,oBAAGA,UAAU,SAAb,mBACU,IAAIqB,MAAOC,cADrB,mCAEE,uBAFF,kDAGiD,uBAC/C,mBACEC,KAAK,oCACLpB,OAAO,SACPqB,IAAI,sBAHN,SAKE,sBAAMxB,UAAU,6BAAhB,oBAEF,mBAAGuB,KAAK,2BAAR,SACE,sBAAMvB,UAAU,6BAAhB,8BCpGZyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.14f4e2a8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CSVReader from \"react-csv-reader\";\nimport axios from \"axios\";\nimport { CSVLink } from \"react-csv\";\n\nfunction App() {\n  let [progress, prgoressEdit] = useState(false);\n  let [down, downEdit] = useState(false);\n  let [crs, crsEdit] = useState(4326);\n  let [data, dataEdit] = useState([]);\n\n  const handleForce = async (data, fileInfo) => {\n    if (fileInfo) {\n      prgoressEdit(true);\n    }\n    let newArray = [];\n    for (let i = 0; i < data.length; i++) {\n      let address = data[i].addr;\n      let Key = process.env.REACT_APP_API_KEY;\n      let url = `http://api.vworld.kr/req/address?service=address&request=getcoord&version=2.0&crs=epsg:${crs}&address=${address}&refine=true&simple=false&format=json&type=road&key=${Key}`;\n\n      await axios.get(url).then((res) => {\n        let xcoord = res.data.response.result.point.x;\n        let ycoord = res.data.response.result.point.y;\n        newArray.push({ address, xcoord, ycoord });\n      });\n    }\n    dataEdit(newArray);\n    prgoressEdit(false);\n    downEdit(true);\n  };\n\n  const headers = [\n    { label: \"addr\", key: \"address\" },\n    { label: \"x\", key: \"xcoord\" },\n    { label: \"y\", key: \"ycoord\" },\n  ];\n\n  const papaparseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: (header) => header.toLowerCase().replace(\"/W/g\", \"_\"),\n  };\n\n  const handleSelect = (e) => {\n    crsEdit(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <div className=\"header\">\n          <h4>도로명주소 좌표 변환기 ver 1.0 📍</h4>\n          <div className=\"desc\">\n            브이월드(vworld)에서 제공하는 geocoder api를 이용하여 <br />\n            도로명주소를\n            <select className=\"options\" onChange={handleSelect}>\n              <option value=\"4326\"> 🌏 위경도 (EPSG:4326)</option>\n              <option value=\"5181\">🌏 TM중부원점 (EPSG:5181)</option>\n              <option value=\"5179\">🌏 UTM-K (EPSG:5179)</option>\n            </select>\n            좌표계로 변환해줍니다&nbsp;✨\n            <br />\n            <p>컬럼명을 addr 로 설정후 csv 파일로 올려주세요</p>\n          </div>\n        </div>\n        <CSVReader\n          className=\"reader\"\n          cssClass=\"react-csv-input\"\n          onFileLoaded={handleForce}\n          parserOptions={papaparseOptions}\n          inputStyle={{ width: \"180px\" }}\n        />\n        {progress ? <span className=\"material-icons progress\">loop</span> : \"\"}\n        {down ? (\n          <CSVLink\n            data={data}\n            headers={headers}\n            separator={\",\"}\n            filename={\"geocoding.csv\"}\n            className=\"download\"\n          >\n            <div className=\"download\">\n              <p>Download</p>\n              <span className=\"material-icons\">file_download</span>\n            </div>\n          </CSVLink>\n        ) : (\n          \"\"\n        )}\n        <p className=\"footer\">\n          &copy; {new Date().getFullYear()}. ethanlee. all rights reserved.\n          <br />\n          if you have any questions, please let me know! <br />\n          <a\n            href=\"https://github.com/seungwoonlee90\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span className=\"material-icons footer-icon\">home</span>\n          </a>\n          <a href=\"mailto:superman@test.com\">\n            <span className=\"material-icons footer-icon\">email</span>\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}