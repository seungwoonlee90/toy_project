{"version":3,"sources":["App2.js","index.js"],"names":["StyledModal","styled","ModalUnstyled","Backdrop","style","width","bgcolor","border","p","px","pb","App","useState","progress","prgoressEdit","down","downEdit","crs","crsEdit","data","dataEdit","addType","addTypeEdit","percent","percentEdit","React","open","setOpen","handleForce","fileInfo","a","newArray","i","address","addr","process","Math","ceil","length","url","axios","request","method","then","res","header","xcoord","response","result","point","x","ycoord","y","push","className","Container","maxWidth","type","onClick","aria-labelledby","aria-describedby","onClose","BackdropComponent","Box","sx","id","href","target","rel","FormControl","fullWidth","InputLabel","Select","labelId","value","label","onChange","e","MenuItem","cssClass","onFileLoaded","parserOptions","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","display","CircularProgress","color","headers","key","separator","filename","Grid","container","item","xs","Link","variant","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd9d472d.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport \"./App.css\";\nimport axios from \"axios\";\nimport CSVReader from \"react-csv-reader\";\nimport { CSVLink } from \"react-csv\";\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 400,\n  bgcolor: 'white',\n  border: '2px solid #000',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction App() {\n    let [progress, prgoressEdit] = useState(false);\n    let [down, downEdit] = useState(false);\n    let [crs, crsEdit] = useState(4326);\n    let [data, dataEdit] = useState([]);\n    let [addType, addTypeEdit] = useState(\"road\");\n    let [percent, percentEdit] = useState(0);\n    let [open, setOpen] = React.useState(false);\n    let handleOpen = () => setOpen(true);\n    let handleClose = () => setOpen(false);\n  \n    const handleForce = async (data, fileInfo) => {\n      if (fileInfo) {\n        prgoressEdit(true);\n      }\n      let newArray = [];\n      for (let i = 0; i < data.length; i++) {\n        let address = data[i].addr;\n        let Key = process.env.REACT_APP_API_KEY;\n        percentEdit(Math.ceil((i / data.length) * 100));\n        let url = `http://api.vworld.kr/req/address?service=address&request=getcoord&version=2.0&crs=epsg:${crs}&address=${address}&refine=true&simple=false&format=json&type=${addType}&key=${Key}`;\n  \n        try {\n          await axios.request({\n            url: url,\n            method: \"GET\"\n          }).then((res) => {\n            res.header(\"Access-Control-Allow-Origin\", \"*\");\n            let xcoord = res.data.response.result.point.x;\n            let ycoord = res.data.response.result.point.y;\n            newArray.push({ address, xcoord, ycoord });\n          });\n        } catch {\n          let xcoord = \"\";\n          let ycoord = \"\";\n          newArray.push({ address, xcoord, ycoord });\n        }\n      }\n      dataEdit(newArray);\n      prgoressEdit(false);\n      downEdit(true);\n    };\n  \n    const headers = [\n      { label: \"addr\", key: \"address\" },\n      { label: \"x\", key: \"xcoord\" },\n      { label: \"y\", key: \"ycoord\" },\n    ];\n  \n    const papaparseOptions = {\n      header: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      transformHeader: (header) => header.toLowerCase().replace(\"/W/g\", \"_\"),\n    };\n  \n    const handleSelect = (e) => {\n      crsEdit(e.target.value);\n    };\n  \n    const addrSelect = (e) => {\n      addTypeEdit(e.target.value);\n    };\n\n    return (\n        <div className=\"App\">\n            <Container maxWidth=\"sm\">\n                <h1 style={{\"text-align\" : \"center\"}}>주소 좌표 변환기 ver 1.1 📍</h1>\n                <div className=\"main\">\n                    <div>\n                        <button type=\"button\" onClick={handleOpen}>\n                            User Guide\n                        </button>\n                        <StyledModal\n                            aria-labelledby=\"unstyled-modal-title\"\n                            aria-describedby=\"unstyled-modal-description\"\n                            open={open}\n                            onClose={handleClose}\n                            BackdropComponent={Backdrop}\n                        >\n                            <Box sx={style}>\n                            <h2 id=\"unstyled-modal-title\" style={{\"color\" : \"black\"}}>Geocoder User Guide 🧐</h2>\n                            <p id=\"unstyled-modal-description\" style={{\"color\" : \"black\", \"textAlign\" : \"left\"}}>\n                            1. 컬럼명을 addr 로 설정 후 CSV UTF-8 포맷으로 준비해주세요<br />\n                            2. \n                            <a\n                            href=\"https://chrome.google.com/webstore/detail/moesif-origin-cors-change/digfbfaphojjndkpccljibejjbppifbc\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                            className=\"google-icon\"\n                            style={{\"color\" : \"black\", \"textDecoration\": \"underline\"}}\n                            >\n                            크롬 익스텐션\n                            </a>\n                            을 설치 후 ON으로 설정을 변경해주세요 <br />\n                            3. 파일선택을 눌러 CSV 파일을 올려주세요 <br />\n                            </p>\n                            </Box>\n                        </StyledModal>\n                    </div>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">주소</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={addType}\n                            label=\"road\"\n                            onChange={addrSelect}\n                        >\n                            <MenuItem value=\"road\">📍 도로명주소</MenuItem>\n                            <MenuItem value=\"parcel\">📍 지번주소</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl fullWidth className='crs_form'>\n                        <InputLabel id=\"demo-simple-select-label\">좌표계</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={crs}\n                            label=\"crs\"\n                            onChange={handleSelect}\n                        >\n                            <MenuItem value=\"4326\">🌏 위경도 (EPSG:4326)</MenuItem>\n                            <MenuItem value=\"3857\">🌏 구글지도 (EPSG:3857)</MenuItem>\n                            <MenuItem value=\"5180\">🌏 TM서부원점 (EPSG:5180)</MenuItem>\n                            <MenuItem value=\"5181\">🌏 TM중부원점 (EPSG:5181)</MenuItem>\n                            <MenuItem value=\"5182\">🌏 TM제주원점 (EPSG:5182)</MenuItem>\n                            <MenuItem value=\"5183\">🌏 TM동부원점 (EPSG:5183)</MenuItem>\n                            <MenuItem value=\"5179\">🌏 UTM-K (EPSG:5179)</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <CSVReader\n                        className=\"reader\"\n                        cssClass=\"react-csv-input\"\n                        onFileLoaded={handleForce}\n                        parserOptions={papaparseOptions}\n                    />\n          {progress ? (\n            <div>\n              <Box sx={{ display: 'flex' }}>\n                <CircularProgress color=\"inherit\" />\n              </Box>\n              <div>{percent}%</div>\n            </div>\n          ) : (\n            \"\"\n          )}\n          {down ? (\n            <CSVLink\n              data={data}\n              headers={headers}\n              separator={\",\"}\n              filename={\"geocoding.csv\"}\n              className=\"download\"\n            >\n              <div className=\"download\">\n                <p>Download</p>\n                <span className=\"material-icons\">file_download</span>\n              </div>\n            </CSVLink>\n          ) : (\n            \"\"\n          )}\n                <Grid container>\n                    <Grid item xs={8}>\n                        <Link href=\"https://github.com/seungwoonlee90\" variant=\"body2\">\n                            <span className=\"material-icons google-icon\">home</span>\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Link href=\"mailto:seungwoonlee90@gmail.com\" variant=\"body2\">\n                            <span className=\"material-icons google-icon\">email</span>\n                        </Link>\n                    </Grid>\n                </Grid>\n                </div>\n                <div className=\"footer\">\n                    <h4>\n                        &copy; {new Date().getFullYear()}. ethanlee. all rights reserved.\n                    </h4>\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App2\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}